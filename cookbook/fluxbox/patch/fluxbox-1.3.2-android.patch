--- src/ClockTool.cc
+++ src/ClockTool.cc
@@ -171,7 +171,12 @@
     // attach signals
     m_tracker.join(theme.reconfigSig(), FbTk::MemFun(*this, &ClockTool::themeReconfigured));
 
+#ifdef ANDROID
+    const char *rawlocale = ::setlocale(LC_TIME, NULL);
+    std::string time_locale = rawlocale?rawlocale:"C";
+#else
     std::string time_locale = setlocale(LC_TIME, NULL);
+#endif
     size_t pos = time_locale.find('.');
     if (pos != std::string::npos)
         time_locale = time_locale.substr(pos+1);
--- src/FbCommands.cc
+++ src/FbCommands.cc
@@ -154,7 +154,11 @@
     // this process exits immediately, so we don't have to worry about memleaks
     const char *shell = getenv("SHELL");
     if (!shell)
+#ifdef ANDROID
+        shell = "/system/bin/sh";
+#else
         shell = "/bin/sh";
+#endif
 
     setsid();
     execl(shell, shell, "-c", m_cmd.c_str(), static_cast<void*>(NULL));
--- src/FbTk/FbString.cc
+++ src/FbTk/FbString.cc
@@ -44,7 +44,9 @@
   #include <stdio.h>
 #endif
 
+#ifndef ANDROID
 #include <langinfo.h>
+#endif
 #include <locale.h>
 
 #include <iostream>
@@ -159,6 +161,7 @@
 static iconv_t s_iconv_convs[CONVSIZE];
 static std::string s_locale_codeset;
 
+using namespace std;
 /// Initialise all of the iconv conversion descriptors
 void init() {
 
@@ -172,9 +175,14 @@
 #ifdef CODESET
     s_locale_codeset = nl_langinfo(CODESET);
 #else // openbsd doesnt have this (yet?)
+#ifdef ANDROID
+    const char *rawlocale = ::setlocale(LC_CTYPE, NULL);
+    std::string locale = rawlocale?rawlocale:"C";
+#else
     std::string locale = setlocale(LC_CTYPE, NULL);
+#endif
     size_t pos = locale.find('.');
-    if (pos != string::npos)
+    if (pos != std::string::npos)
         s_locale_codeset = locale.substr(pos+1);
 #endif // CODESET
 
--- src/FbTk/Font.cc
+++ src/FbTk/Font.cc
@@ -65,7 +65,9 @@
 #include <list>
 #include <map>
 #include <typeinfo>
+#ifndef ANDROID
 #include <langinfo.h>
+#endif
 
 #include <errno.h>
 
--- src/FbTk/I18n.hh
+++ src/FbTk/I18n.hh
@@ -44,7 +44,7 @@
 extern "C" {
 #include <nl_types.h>
 }
-#elif defined(__CYGWIN__) || defined(__EMX__) || defined(__APPLE__)
+#elif defined(__CYGWIN__) || defined(__EMX__) || defined(__APPLE__) || defined(ANDROID)
 #ifdef __cplusplus
 extern "C" {
 #endif // __cplusplus
--- src/FbTk/StringUtil.cc
+++ src/FbTk/StringUtil.cc
@@ -175,7 +175,12 @@
     string retval;
     size_t pos = filename.find_first_not_of(" \t");
     if (pos != string::npos && filename[pos] == '~') {
+#ifdef ANDROID
+        const char *rawval = getenv("HOME");
+        retval = rawval?rawval:"/mnt/sdcard";
+#else
         retval = getenv("HOME");
+#endif
         if (pos != filename.size()) {
             // copy from the character after '~'
             retval += static_cast<const char *>(filename.c_str() + pos + 1);
--- src/main.cc
+++ src/main.cc
@@ -225,6 +225,9 @@
         }
 
         env = getenv("HOME");
+#ifdef ANDROID
+        env = env?env:"/mnt/sdcard";
+#endif
         if (env) {
             rc_path.assign(std::string(env) + "/." + realProgramName("fluxbox"));
             rc_file = rc_path + "/init";
@@ -530,7 +533,11 @@
         if (!restart_argument.empty()) {
             const char *shell = getenv("SHELL");
             if (!shell)
+#ifdef ANDROID
+                shell = "/system/bin/sh";
+#else
                 shell = "/bin/sh";
+#endif
 
             execlp(shell, shell, "-c", restart_argument.c_str(), (const char *) NULL);
             perror(restart_argument.c_str());
--- util/fbrun/FbRun.cc
+++ util/fbrun/FbRun.cc
@@ -127,7 +127,11 @@
 
         const char *shell = getenv("SHELL");
         if (!shell)
+#ifdef ANDROID
+            shell = "/system/bin/sh";
+#else
             shell = "/bin/sh";
+#endif
 
         setsid();
         execl(shell, shell, "-c", command.c_str(), static_cast<void*>(NULL));
--- util/fluxbox-update_configs.cc
+++ util/fluxbox-update_configs.cc
@@ -615,7 +615,13 @@
     }
 
     if (rc_filename.empty())
+#ifdef ANDROID
+        rc_filename = getenv("HOME");
+        if (rc_filename == "") rc_filename = string("/mnt/sdcard/.fluxbox/init");
+        else rc_filename += string("/.fluxbox/init");
+#else
         rc_filename = getenv("HOME") + string("/.fluxbox/init");
+#endif
 
     FbTk::ResourceManager resource_manager(rc_filename.c_str(),false);
     if (!resource_manager.load(rc_filename.c_str())) {
