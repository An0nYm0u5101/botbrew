#!/bin/bash
if [ "${G_BOTBREW}" = "" ]; then kill -SIGINT $$; fi

PACKAGE_NAME=$(basename $(pwd))
PACKAGE_VERSION=0.18.1.1
PACKAGE_DEPEND=( pth libiconv libunistring ncurses expat )

FULLNAME=${PACKAGE_NAME}-${PACKAGE_VERSION}
ARCHIVE=${FULLNAME}.tar.gz

botbrew_do_build() {
	botbrew_download http://ftp.gnu.org/gnu/${PACKAGE_NAME}/${ARCHIVE} ${ARCHIVE}
	botbrew_unpack ${ARCHIVE} ${FULLNAME} || true
	botbrew_copytree ${FULLNAME}/${FULLNAME} ${G_SOURCE} || true
	botbrew_fix_gnulib ${G_SOURCE}/gettext-runtime/gnulib-lib
	botbrew_fix_gnulib ${G_SOURCE}/gettext-runtime/libasprintf
	botbrew_fix_gnulib ${G_SOURCE}/gettext-tools/gnulib-lib
	botbrew_fix_gnulib ${G_SOURCE}/gettext-tools/libgettextpo
	botbrew_fix_gnulib ${G_SOURCE}/gettext-tools/libgrep
	botbrew_patchtree -p0 ${G_SOURCE} patch/gettext-0.18.1.1-android.patch
	botbrew_import
	botbrew_fix_crosslibconfig ${G_IMPORT}/system/bin/pth-config
	botbrew_fix_crosslibconfig ${G_IMPORT}/system/bin/ncurses5-config
	if ! [ -e ${G_OBJECT}/Makefile ]; then
		(
			mkdir -p ${G_OBJECT}; cd ${G_OBJECT}
			CC="agcc.bash" CXX="agcc-bash-g++" LD="agcc.bash" \
			../${G_SOURCE}/configure ${G_SYSTEMPREFIX[@]} --host=${G_TRIPLET} \
				--with-libpth-prefix=${G_SYSDIR} \
				--with-libiconv-prefix=${G_SYSDIR} \
				--with-included-glib \
				--with-included-libcroco \
				--with-libunistring-prefix=${G_SYSDIR} \
				--with-included-libxml \
				--with-libncurses-prefix=${G_SYSDIR} \
				--with-libexpat-prefix=${G_SYSDIR}
		)
	fi
	if ! [ -e ${G_EXPORT}/.d ]; then
		${G_MAKE} -C ${G_OBJECT}
		${G_MAKE} -C ${G_OBJECT} install DESTDIR=$(pwd)/${G_EXPORT}
		rm ${G_EXPORT}/system/lib/*.la ${G_EXPORT}/system/lib/charset.alias
		${G_STRIP} --strip-unneeded ${G_EXPORT}/system/bin/* ${G_EXPORT}/system/lib/gettext/* || true
		botbrew_fix_shell_path $(grep -rlIF '/bin/sh' ${G_EXPORT})
		touch ${G_EXPORT}/.d
	fi
}
