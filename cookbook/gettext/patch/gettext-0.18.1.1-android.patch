--- gettext-tools/gnulib-lib/cloexec.c
+++ gettext-tools/gnulib-lib/cloexec.c
@@ -22,7 +22,7 @@
 #include "cloexec.h"
 
 #include <errno.h>
-#include <fcntl.h>
+#include "fcntl.h"
 #include <unistd.h>
 
 /* Set the `FD_CLOEXEC' flag of DESC if VALUE is true,
--- gettext-tools/gnulib-lib/dup-safer-flag.c
+++ gettext-tools/gnulib-lib/dup-safer-flag.c
@@ -23,7 +23,7 @@
 /* Specification.  */
 #include "unistd-safer.h"
 
-#include <fcntl.h>
+#include "fcntl.h"
 #include <unistd.h>
 
 #include "cloexec.h"
--- gettext-tools/gnulib-lib/fcntl.c
+++ gettext-tools/gnulib-lib/fcntl.c
@@ -20,7 +20,7 @@
 #include <config.h>
 
 /* Specification.  */
-#include <fcntl.h>
+#include "fcntl.h"
 
 #include <errno.h>
 #include <limits.h>
--- gettext-tools/gnulib-lib/fnmatch.c
+++ gettext-tools/gnulib-lib/fnmatch.c
@@ -28,7 +28,7 @@
 # define __builtin_expect(expr, expected) (expr)
 #endif
 
-#include <fnmatch.h>
+#include "fnmatch.h"
 
 #include <alloca.h>
 #include <assert.h>
--- gettext-tools/gnulib-lib/gettimeofday.c
+++ gettext-tools/gnulib-lib/gettimeofday.c
@@ -99,9 +99,15 @@
    that lack this function, or whose implementation of this function
    causes problems.  */
 
+#ifdef ANDROID
+int
+gettimeofday (struct timeval *restrict tv, struct timezone *restrict tz)
+{
+#else
 int
 gettimeofday (struct timeval *restrict tv, void *restrict tz)
 {
+#endif
 #undef gettimeofday
 #if HAVE_GETTIMEOFDAY
 # if GETTIMEOFDAY_CLOBBERS_LOCALTIME
--- gettext-tools/gnulib-lib/pipe2.c
+++ gettext-tools/gnulib-lib/pipe2.c
@@ -21,7 +21,7 @@
 #include <unistd.h>
 
 #include <errno.h>
-#include <fcntl.h>
+#include "fcntl.h"
 
 #include "binary-io.h"
 
--- gettext-tools/libgrep/m-regex.c
+++ gettext-tools/libgrep/m-regex.c
@@ -25,7 +25,7 @@
 #include <stdbool.h>
 #include <stdlib.h>
 #include <string.h>
-#include <regex.h>
+#include "regex.h"
 
 #include "error.h"
 #include "exitfail.h"
--- gettext-tools/libgrep/nl_langinfo.c
+++ gettext-tools/libgrep/nl_langinfo.c
@@ -141,10 +141,17 @@
       return "ISO-8859-1";
 # endif
     /* nl_langinfo items of the LC_NUMERIC category */
+#ifdef ANDROID
+    case RADIXCHAR:
+      return ".";
+    case THOUSEP:
+      return ",";
+#else
     case RADIXCHAR:
       return localeconv () ->decimal_point;
     case THOUSEP:
       return localeconv () ->thousands_sep;
+#endif
     /* nl_langinfo items of the LC_TIME category.
        TODO: Really use the locale.  */
     case D_T_FMT:
--- gettext-tools/libgrep/regex.c
+++ gettext-tools/libgrep/regex.c
@@ -55,7 +55,7 @@
    #undefs RE_DUP_MAX and sets it to the right value.  */
 #include <limits.h>
 
-#include <regex.h>
+#include "regex.h"
 #include "regex_internal.h"
 
 #include "regex_internal.c"
--- gettext-tools/src/msginit.c
+++ gettext-tools/src/msginit.c
@@ -1073,7 +1073,7 @@
   struct passwd *pwd;
 
   pwd = get_user_pwd ();
-#if HAVE_PWD_H
+#if HAVE_PWD_H && !defined ANDROID
   if (pwd != NULL)
     {
       const char *fullname;
--- gettext-tools/src/write-catalog.c
+++ gettext-tools/src/write-catalog.c
@@ -61,6 +61,10 @@
 
 #endif
 
+#ifdef ANDROID
+#include "../gnulib-lib/sys/stat.h"
+#endif
+
 
 /* =========== Some parameters for use by 'msgdomain_list_print'. ========== */
 
