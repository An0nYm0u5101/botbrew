--- gio/gdbus-tool.c
+++ gio/gdbus-tool.c
@@ -50,7 +50,11 @@
   s = g_strdup_vprintf (format, var_args);
   if (f == NULL)
     {
+#ifdef ANDROID
+      f = fopen ("/cache/gdbus-completion-debug.txt", "a+");
+#else
       f = fopen ("/tmp/gdbus-completion-debug.txt", "a+");
+#endif
     }
   fprintf (f, "%s\n", s);
   g_free (s);
--- gio/glocalfileinfo.c
+++ gio/glocalfileinfo.c
@@ -1095,6 +1095,7 @@
       if (pwbufp->pw_name != NULL && pwbufp->pw_name[0] != 0)
 	data->user_name = convert_pwd_string_to_utf8 (pwbufp->pw_name);
 
+#ifndef ANDROID
       gecos = pwbufp->pw_gecos;
 
       if (gecos)
@@ -1104,6 +1105,7 @@
 	    *comma = 0;
 	  data->real_name = convert_pwd_string_to_utf8 (gecos);
 	}
+#endif
     }
 
   /* Default fallbacks */
--- gio/gunixmounts.c
+++ gio/gunixmounts.c
@@ -240,6 +240,7 @@
     "/",              /* we already have "Filesystem root" in Nautilus */ 
     "/bin",
     "/boot",
+    "/cache",
     "/dev",
     "/etc",
     "/home",
--- gio/inotify/inotify-diag.c
+++ gio/inotify/inotify-diag.c
@@ -45,7 +45,11 @@
   ioc = NULL;
   pid = getpid ();
 
+#ifdef ANDROID
+  fname = g_strdup_printf ("/cache/gvfsid.%d", pid);
+#else
   fname = g_strdup_printf ("/tmp/gvfsid.%d", pid);
+#endif
   ioc = g_io_channel_new_file (fname, "w", NULL);
   g_free (fname);
   
--- gio/libasyncns/asyncns.c
+++ gio/libasyncns/asyncns.c
@@ -690,7 +690,11 @@
         goto fail;
 
 #ifdef PR_SET_PDEATHSIG
+#ifdef ANDROID
+    if (prctl(PR_SET_PDEATHSIG, SIGTERM, 0, 0, 0) >= 0)
+#else
     if (prctl(PR_SET_PDEATHSIG, SIGTERM) >= 0)
+#endif
         have_death_sig = 1;
 #endif
 
--- gio/tests/gdbus-sessionbus.c
+++ gio/tests/gdbus-sessionbus.c
@@ -307,7 +307,11 @@
 {
   if (temporary_address == NULL)
     {
+#ifdef ANDROID
+      temporary_address = g_strdup_printf ("unix:path=/cache/g-dbus-tests-pid-%d", getpid ());
+#else
       temporary_address = g_strdup_printf ("unix:path=/tmp/g-dbus-tests-pid-%d", getpid ());
+#endif
     }
 
   return temporary_address;
--- glib/gstrfuncs.c
+++ glib/gstrfuncs.c
@@ -440,8 +440,12 @@
 
   fail_pos = NULL;
 
+#ifdef ANDROID
+  decimal_point = ".";
+#else
   locale_data = localeconv ();
   decimal_point = locale_data->decimal_point;
+#endif
   decimal_point_len = strlen (decimal_point);
 
   g_assert (decimal_point_len != 0);
@@ -654,8 +658,12 @@
 
   _g_snprintf (buffer, buf_len, format, d);
 
+#ifdef ANDROID
+  decimal_point = ".";
+#else
   locale_data = localeconv ();
   decimal_point = locale_data->decimal_point;
+#endif
   decimal_point_len = strlen (decimal_point);
 
   g_assert (decimal_point_len != 0);
--- glib/gutils.c
+++ glib/gutils.c
@@ -1708,6 +1708,9 @@
   if (g_tmp_dir == NULL || *g_tmp_dir == '\0')
     g_tmp_dir = get_windows_directory_root ();
 #else  
+#ifdef ANDROID
+#undef P_tmpdir
+#endif
 #ifdef P_tmpdir
   if (g_tmp_dir == NULL || *g_tmp_dir == '\0')
     {
@@ -1721,7 +1724,11 @@
   
   if (g_tmp_dir == NULL || *g_tmp_dir == '\0')
     {
+#ifdef ANDROID
+      g_tmp_dir = g_strdup ("/cache");
+#else
       g_tmp_dir = g_strdup ("/tmp");
+#endif
     }
 #endif	/* !G_OS_WIN32 */
   
@@ -1852,6 +1859,7 @@
     while (!pw);
 #  endif /* HAVE_POSIX_GETPWUID_R || HAVE_NONPOSIX_GETPWUID_R */
     
+#ifndef ANDROID
     if (!pw)
       {
 	setpwent ();
@@ -1879,6 +1887,7 @@
 	if (!g_home_dir)
 	  g_home_dir = g_strdup (pw->pw_dir);
       }
+#endif
     g_free (buffer);
   }
   
@@ -1904,6 +1913,13 @@
     g_home_dir = g_strdup (g_getenv ("HOME"));
 #endif
 
+#ifdef ANDROID
+  if (g_home_dir == NULL || *g_home_dir == '\0') {
+    if (g_home_dir) g_free (g_home_dir);
+    g_home_dir = g_strdup ("/mnt/sdcard");
+  }
+#endif
+
 #ifdef __EMX__
   /* change '\\' in %HOME% to '/' */
   g_strdelimit (g_home_dir, "\\",'/');
