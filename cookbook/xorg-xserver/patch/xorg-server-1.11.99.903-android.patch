--- hw/vfb/Makefile.in
+++ hw/vfb/Makefile.in
@@ -585,7 +585,7 @@
 	rm -f $$list
 Xvfb$(EXEEXT): $(Xvfb_OBJECTS) $(Xvfb_DEPENDENCIES) $(EXTRA_Xvfb_DEPENDENCIES) 
 	@rm -f Xvfb$(EXEEXT)
-	$(AM_V_CCLD)$(Xvfb_LINK) $(Xvfb_OBJECTS) $(Xvfb_LDADD) $(LIBS)
+	$(AM_V_CCLD)$(Xvfb_LINK) $(Xvfb_OBJECTS) ../../dix/main.o $(Xvfb_LDADD) $(LIBS)
 
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
--- hw/xfree86/common/compiler.h
+++ hw/xfree86/common/compiler.h
@@ -975,24 +975,32 @@
 /* note that the appropriate setup via "ioperm" needs to be done */
 /*  *before* any inx/outx is done. */
 
+#ifndef ANDROID
 #include <sys/io.h>
+#endif
 
 static __inline__ void
 xf_outb(unsigned short port, unsigned char val)
 {
+#ifndef ANDROID
     outb(val, port);
+#endif
 }
 
 static __inline__ void
 xf_outw(unsigned short port, unsigned short val)
 {
+#ifndef ANDROID
     outw(val, port);
+#endif
 }
 
 static __inline__ void
 xf_outl(unsigned short port, unsigned int val)
 {
+#ifndef ANDROID
     outl(val, port);
+#endif
 }
 
 #define outb xf_outb
--- hw/xfree86/os-support/xf86_OSlib.h
+++ hw/xfree86/os-support/xf86_OSlib.h
@@ -196,7 +196,11 @@
 # include <sys/mman.h>
 # ifdef __linux__
 #  define HAS_USL_VTS
+#ifdef ANDROID
+#  include <linux/kd.h>
+#else
 #  include <sys/kd.h>
+#endif
 #  include <sys/vt.h>
 #  define LDGMAP GIO_SCRNMAP
 #  define LDSMAP PIO_SCRNMAP
--- hw/xfree86/x86emu/x86emu/types.h
+++ hw/xfree86/x86emu/x86emu/types.h
@@ -40,7 +40,7 @@
 #ifndef __X86EMU_TYPES_H
 #define __X86EMU_TYPES_H
 
-#ifndef NO_SYS_HEADERS
+#if !defined(NO_SYS_HEADERS) || defined(ANDROID)
 #include <sys/types.h>
 #endif
 
--- hw/xwin/InitOutput.c
+++ hw/xwin/InitOutput.c
@@ -295,7 +295,11 @@
   {
     BOOL system = (winCheckMntOpt(ent, "user") != NULL);
     BOOL root = (strcmp(ent->mnt_dir, "/") == 0);
+#ifdef ANDROID
+    BOOL tmp = (strcmp(ent->mnt_dir, "/cache") == 0);
+#else
     BOOL tmp = (strcmp(ent->mnt_dir, "/tmp") == 0);
+#endif
     
     if (system)
     {
@@ -334,7 +338,11 @@
   }
   
  if (!binary) 
+#ifdef ANDROID
+   winMsg(X_WARNING, "/cache mounted in textmode\n");
+#else
    winMsg(X_WARNING, "/tmp mounted in textmode\n");
+#endif
 }
 #else
 static void
--- hw/xwin/winprefs.c
+++ hw/xwin/winprefs.c
@@ -357,11 +357,15 @@
 		      /* Disassociate any TTYs */
 		      setsid();
 
+#ifdef ANDROID
+		      execl ("/system/bin/sh", "/system/bin/sh", "-c", m->menuItem[j].param, NULL);
+#else
 		      execl ("/bin/sh",
 			     "/bin/sh",
 			     "-c",
 			     m->menuItem[j].param,
 			     NULL);
+#endif
 		      exit (0);
 		    }
 		  else
--- Makefile.am
+++ Makefile.am
@@ -39,8 +39,7 @@
 	$(GLX_DIR) \
 	exa \
 	config \
-	hw \
-	test
+	hw
 
 if XORG
 aclocaldir = $(datadir)/aclocal
@@ -89,8 +88,7 @@
 	glx \
 	exa \
 	config \
-	hw \
-	test
+	hw
 
 # gross hack
 relink: all
--- Makefile.in
+++ Makefile.in
@@ -505,8 +505,7 @@
 	$(GLX_DIR) \
 	exa \
 	config \
-	hw \
-	test
+	hw
 
 @XORG_TRUE@aclocaldir = $(datadir)/aclocal
 @XORG_TRUE@aclocal_DATA = xorg-server.m4
@@ -540,8 +539,7 @@
 	glx \
 	exa \
 	config \
-	hw \
-	test
+	hw
 
 all: all-recursive
 
--- os/osdep.h
+++ os/osdep.h
@@ -85,6 +85,10 @@
 
 #include <X11/Xpoll.h>
 
+#ifdef ANDROID
+typedef unsigned long fd_mask;
+#endif
+
 /*
  * MAXSOCKS is used only for initialising MaxClients when no other method
  * like sysconf(_SC_OPEN_MAX) is not supported.
--- os/utils.c
+++ os/utils.c
@@ -228,7 +228,11 @@
  * server at a time.  This keeps the servers from stomping on each other
  * if the user forgets to give them different display numbers.
  */
+#ifdef ANDROID
+#define LOCK_DIR "/cache"
+#else
 #define LOCK_DIR "/tmp"
+#endif
 #define LOCK_TMP_PREFIX "/.tX"
 #define LOCK_PREFIX "/.X"
 #define LOCK_SUFFIX "-lock"
@@ -1274,7 +1278,11 @@
 	    _exit(127);
 	if (setuid(getuid()) == -1)
 	    _exit(127);
+#ifdef ANDROID
+	execl("/system/bin/sh", "sh", "-c", command, (char *)NULL);
+#else
 	execl("/bin/sh", "sh", "-c", command, (char *)NULL);
+#endif
 	_exit(127);
     default:	/* parent */
 	do {
@@ -1358,7 +1366,11 @@
 	    }
 	    close(pdes[1]);
 	}
+#ifdef ANDROID
+	execl("/system/bin/sh", "sh", "-c", command, (char *)NULL);
+#else
 	execl("/bin/sh", "sh", "-c", command, (char *)NULL);
+#endif
 	_exit(127);
     }
 
--- Xext/xcmisc.c
+++ Xext/xcmisc.c
@@ -37,7 +37,7 @@
 #include "dixstruct.h"
 #include "extnsionst.h"
 #include "swaprep.h"
-#include <X11/extensions/xcmiscproto.h>
+#include <X11/extensions/xcmiscstr.h>
 #include "modinit.h"
 
 #include <stdint.h>
--- xkb/ddxLoad.c
+++ xkb/ddxLoad.c
@@ -90,7 +90,11 @@
     else if (getenv("TMP") != NULL)
         return getenv("TEMP");
     else
+#ifdef ANDROID
+        return "/cache";
+#else
         return "/tmp";
+#endif
 }
 
 int 
@@ -164,10 +168,14 @@
 	(void) strcat(outdir, "\\");
     } else 
 #endif
+#ifdef ANDROID
+    if (strlen("/cache/") < size) (void) strcpy (outdir, "/cache/");
+#else
     if (strlen("/tmp/") < size)
     {
 	(void) strcpy (outdir, "/tmp/");
     }
+#endif
 }
 
 static Bool
